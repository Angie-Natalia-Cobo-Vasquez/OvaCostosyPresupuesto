name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'adopt'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t angiecobo/ova-costos:latest .
          docker push angiecobo/ova-costos:latest

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: true

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify compose.yaml Exists
        run: |
          if [ ! -f compose.yaml ]; then
          echo "Error: compose.yaml not found!"
          exit 1
          fi

      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add Host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yaml to EC2
        run: |
          scp -i ~/.ssh/id_rsa ./compose.yaml ubuntu@${{ secrets.EC2_HOST }}:~/app-costos/compose.yaml

      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app-costos
            docker compose --profile app pull
            docker compose --profile app up -d
